# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master
    
pr: none

jobs:
- job: Build
  displayName: Build Xbox Game Bar Samples
  strategy:
    maxParallel: 4
    matrix:
      release_x86:
        buildPlatform: x86
        buildConfiguration: Release
      release_x64:
        buildPlatform: x64
        buildConfiguration: Release
      release_arm64:
        buildPlatform: arm64
        buildConfiguration: Release
      debug_x64:
        buildPlatform: x64
        buildConfiguration: Debug
  pool:
    vmImage: 'windows-latest'

  variables:
    - group: XboxGameBarSamples
    - name: solution
      value: '**/*.sln'
    - name: appxPackageDir
      value: '$(build.artifactStagingDirectory)\AppPackages\\'

  steps:
  - task: NuGetToolInstaller@1

  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    displayName: 'NuGet restore all solutions'
    inputs:
      restoreSolution: '$(solution)'
      feedsToUse: config
      nugetConfigPath: 'Samples\Build\nuget.config'

  - task: DownloadSecureFile@1
    name: signingCert
    displayName: 'Download CA certificate'
    inputs:
      secureFile: 'XboxGameBarSamplesBuild.pfx'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)"
                    /p:AppxPackageDir="$(appxPackageDir)"
                    /p:AppxBundle=Never
                    /p:UapAppxPackageBuildMode=SideloadOnly
                    /p:AppxPackageSigningEnabled=true
                    /p:PackageCertificateThumbprint=""
                    /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                    /p:PackageCertificatePassword="$(PackageCertPwd)"'

 # Publish build artifacts 
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: $(buildConfiguration)\$(buildPlatform)'
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: '$(build.artifactStagingDirectory)'
      ArtifactName: 'Bin'
      